<Window x:Class="KlarfViewer.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:KlarfViewer"
        xmlns:vm="clr-namespace:KlarfViewer.ViewModel"
        mc:Ignorable="d"
        Title="KlarfViewer" Height="800" Width="1200" MinHeight="500" MinWidth="1000">

    <Window.DataContext>
        <vm:MainViewModel/>
    </Window.DataContext>

    <Window.InputBindings>
        <KeyBinding Modifiers="Control" Key="S" />
        <KeyBinding Modifiers="Control" Key="C" />
        <KeyBinding Modifiers="Control" Key="O" />
        <KeyBinding Modifiers="Control" Key="Z" />
        <KeyBinding Modifiers="Control" Key="Y" />
    </Window.InputBindings>

    <DockPanel>
        <!-- Menu -->
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="_File">
                <MenuItem Header="File Open" />
                <MenuItem Header="File Save" />
                <Separator/>
                <MenuItem Header="Export To CSV" />
            </MenuItem>
            <MenuItem Header="_View">
                <MenuItem Header="Skeletonize"/>
                <MenuItem Header="Clustering" />
                <MenuItem Header="HeatMap" />
            </MenuItem>
            <MenuItem Header="_Setting">
                <MenuItem Header="setting" />
            </MenuItem>
            <MenuItem Header="_Tools">
                <MenuItem Header="Measurement"/>
            </MenuItem>
            <MenuItem Header="_UI">
                <MenuItem Header="Save"/>
            </MenuItem>
        </Menu>


        <!-- Viewer -->
        <Grid Background="{StaticResource PrimaryBrush}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <!-- Spliter -->
            <GridSplitter Grid.Row="0" Grid.Column="1" Grid.RowSpan="3"
                  Width="3" HorizontalAlignment="Center" VerticalAlignment="Stretch"
                  Background="{StaticResource BorderBrushColor}" />

            <GridSplitter Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3"
                  Height="3" HorizontalAlignment="Stretch" VerticalAlignment="Center"
                  Background="{StaticResource BorderBrushColor}" />

            <!-- Wafer map Viewer -->
            <Border Grid.Row="0" Grid.Column="0" BorderBrush="{StaticResource BorderBrushColor}" BorderThickness="1">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Row="0" Text="Wafer Map Viewer" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="5,5,5,5" FontSize="14"  Foreground="White"/>

                    <ItemsControl Grid.Row="1" ItemsSource="{Binding WaferMapVM.Dies}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate DataType="{x:Type vm:DieInfo}">
                                <Rectangle Width="20" Height="20" Stroke="Black" StrokeThickness="1">
                                    <Rectangle.Style>
                                        <Style TargetType="Rectangle">
                                            <Setter Property="Fill" Value="Gray"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsDefective}" Value="True">
                                                    <Setter Property="Fill" Value="Red"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Rectangle.Style>
                                </Rectangle>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>

                </Grid>

            </Border>

            <!-- Defct Viewer -->
            <Border Grid.Row="0" Grid.Column="2" BorderBrush="{StaticResource BorderBrushColor}" BorderThickness="1">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <TextBlock Grid.Row="0" Text="Defect Viewer" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="5,5,5,5" FontSize="14" Foreground="White"/>

                    <ScrollViewer  Grid.Row="1" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                        <Viewbox>
                            <Image Source="{Binding DefectImageVM.DefectImage}" Stretch="Uniform"/>
                        </Viewbox>
                    </ScrollViewer>
                </Grid>

            </Border>

            <!-- File List Viewer -->
            <Border Grid.Row="2" Grid.Column="0" BorderBrush="{StaticResource BorderBrushColor}" BorderThickness="1">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="6*"/>
                    </Grid.RowDefinitions>

                    <TextBlock Text="File List Viewer" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="5,0,0,0" FontSize="14"  Foreground="White" />
                    <Border Grid.Row="1" BorderBrush="{StaticResource BorderBrushColor}" BorderThickness="1" Margin="5">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="2*"/>
                            </Grid.ColumnDefinitions>

                            <Button Grid.Column="0" Content="Open Folder" Margin="2" Style="{StaticResource ModernButtonStyle}" Command="{Binding FileViewerVM.OpenFolderCommand}" />
                            <Button Grid.Column="1" Content="Save All Image" Margin="2" Style="{StaticResource ModernButtonStyle}"/>
                            <Button Grid.Column="2" Content="Refresh" Margin="2" Style="{StaticResource ModernButtonStyle}"/>
                            <Button Grid.Column="3" Content="Gage" Margin="2" Style="{StaticResource ModernButtonStyle}"/>
                        </Grid>

                    </Border>
                    <Grid Grid.Row="2" >
                        <TreeView x:Name="FileTreeView" 
                                  ItemsSource="{Binding FileViewerVM.Items}"
                                  Background="{StaticResource SecondaryBrush}" 
                                  Foreground="White"
                                  Margin="5"
                                  SelectedItemChanged="FileTreeView_SelectedItemChanged">
                            <TreeView.ItemContainerStyle>
                                <!-- Bind SelectedItem to ViewModel -->
                                <Style TargetType="{x:Type TreeViewItem}">
                                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
                                </Style>
                            </TreeView.ItemContainerStyle>
                            <TreeView.Resources>
                                <HierarchicalDataTemplate DataType="{x:Type vm:FileSystemObjectViewModel}" ItemsSource="{Binding Children}">
                                    <TextBlock Text="{Binding Name}" />
                                </HierarchicalDataTemplate>
                            </TreeView.Resources>
                        </TreeView>
                    </Grid>


                </Grid>
            </Border>

            <!-- Defect Info Viewer -->
            <Expander Grid.Row="2" Header="Defect Info Viewer" Grid.Column="2" Foreground="White">
                <Border >
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <Grid Grid.Row="0" Margin="5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="2*"/>
                            </Grid.ColumnDefinitions>
                            <Border Grid.Column="0" BorderThickness="1" BorderBrush="{StaticResource BorderBrushColor}">
                                <StackPanel>
                                    <TextBlock/>
                                    <Separator/>

                                    <TextBlock/>
                                    <Separator/>

                                    <TextBlock/>
                                    <Separator/>

                                    <TextBlock/>
                                    
                                </StackPanel>
                            </Border>
                            <Border Grid.Column="1" Margin="5,0,0,0" BorderThickness="1" BorderBrush="{StaticResource BorderBrushColor}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <Button Grid.Row="0" Grid.Column="0"/>
                                    <Button Grid.Row="1" Grid.Column="0"/>
                                    <Button Grid.Row="2" Grid.Column="0"/>
                                    <Button Grid.Row="0" Grid.Column="2"/>
                                    <Button Grid.Row="1" Grid.Column="2"/>
                                    <Button Grid.Row="2" Grid.Column="2"/>

                                    <TextBlock Grid.Row="0" Grid.Column="1" />
                                    <TextBlock Grid.Row="1" Grid.Column="1" />
                                    <TextBlock Grid.Row="2" Grid.Column="1" />

                                </Grid>
                            </Border>


                        </Grid>
                        <DataGrid Grid.Row="1" Margin="5,0,5,5" 
                                  ItemsSource="{Binding DefectListVM.DefectSpec}"
                                  SelectedItem="{Binding DefectListVM.SelectedDefect, Mode=TwoWay}"
                                  IsReadOnly="True"
                                  AutoGenerateColumns="True"
                                  Background="{StaticResource SecondaryBrush}" 
                                  BorderBrush="{StaticResource BorderBrushColor}">
                        </DataGrid>

                    </Grid>
                </Border>
            </Expander>


        </Grid>
    </DockPanel>
</Window>
